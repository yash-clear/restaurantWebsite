{"version":3,"sources":["components/Loading.js","baseUrl.js","DishDetail.js","Menu.js","Header.js","Footer.js","components/Contact.js","components/Home.js","components/About.js","Redux/ActionCreators.js","Redux/ActionTypes.js","Main.js","Redux/dishes.js","Redux/comments.js","Redux/promotions.js","Redux/leaders.js","Redux/Forms.js","App.js","Redux/Configure..js","index.js"],"names":["Loading","className","baseUrl","required","val","length","maxLength","len","Commentform","props","handleSubmit","bind","toggleModal","state","isModalOpen","this","setState","values","postComment","dishId","rating","author","comment","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","size","select","model","name","text","id","placeholder","validators","minLength","show","messages","textarea","rows","type","value","color","Component","RenderDish","dish","in","transformProps","exitTransform","Card","CardImg","top","src","image","alt","CardBody","CardTitle","CardText","description","RenderComments","comments","map","key","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","isLoading","errMess","class","Breadcrumb","to","style","textDecoration","active","RenderMenuItem","fontStyle","fontWeight","width","CardImgOverlay","Menu","menu","dishes","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","marginLeft","Nav","navbar","padding","float","marginRight","Form","FormGroup","Input","innerRef","input","check","Collapse","display","margin","Jumbotron","Footer","marginTop","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","offset","checkbox","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leaders","leadersLoading","leadersErrMess","About","RenderLeader","leader","Media","tag","left","middle","object","body","heading","fontSize","RenderContent","CardHeader","title","list","leaderLoading","leaderErrMess","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","ReactDOM","render","document","getElementById"],"mappings":"obAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCNCC,EAAU,yB,QCQjBC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAGvDC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAc,EAAKA,aAAaC,KAAlB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAEnB,EAAKE,MAAQ,CACXC,aAAa,GANA,E,0DAYnBC,KAAKC,SAAS,CACZF,aAAcC,KAAKF,MAAMC,gB,mCAIdG,GACXF,KAAKH,cACLG,KAAKN,MAAMS,YAAYH,KAAKN,MAAMU,OAAQF,EAAOG,OAAQH,EAAOI,OAAQJ,EAAOK,W,+BAI7E,OACE,oCACM,kBAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,QAASV,KAAKH,aAClC,0BAAMX,UAAU,iBADZ,mBAGN,kBAACyB,EAAA,EAAD,CAAOC,OAAQZ,KAAKF,MAAMC,YAAac,OAAQb,KAAKH,aAClD,kBAACiB,EAAA,EAAD,CAAaD,OAAQb,KAAKH,aAA1B,kBACA,kBAACkB,EAAA,EAAD,KACE,kBAAC,YAAD,CAAWC,SAAUhB,KAAKL,cACxB,kBAACsB,EAAA,EAAD,CAAK/B,UAAU,cACb,kBAACgC,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,IAA5B,UAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,CAAEE,KAAM,KACf,kBAAC,UAAQC,OAAT,CACEC,MAAM,UACNC,KAAK,SACLvC,UAAU,gBAEV,qCACA,qCACA,qCACA,qCACA,wCAIN,kBAAC+B,EAAA,EAAD,CAAK/B,UAAU,cACb,kBAACgC,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,IAA5B,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAAC,UAAQM,KAAT,CACEF,MAAM,UACNG,GAAG,SACHF,KAAK,SACLG,YAAY,YACZ1C,UAAU,eACV2C,WAAY,CACVzC,WACA0C,WAlEHtC,EAkEwB,EAlEhB,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAmEpCD,UAAWA,EAAU,OAGzB,kBAAC,SAAD,CACEL,UAAU,cACVsC,MAAM,UACNO,KAAK,UACLC,SAAU,CACR5C,SAAU,WACV0C,UAAW,oCACXvC,UAAW,qCAKnB,kBAAC0B,EAAA,EAAD,CAAK/B,UAAU,cACb,kBAACgC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,IAA7B,WAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAAC,UAAQa,SAAT,CACET,MAAM,WACNG,GAAG,UACHF,KAAK,UACLS,KAAM,EACNhD,UAAU,mBAIhB,kBAACsB,EAAA,EAAD,CAAQ2B,KAAK,SAASC,MAAM,SAASC,MAAM,WAA3C,cAhGI,IAAC7C,M,GAEO8C,aAyG1B,SAASC,EAAT,GAA6B,IAARC,EAAO,EAAPA,KACb,OACE,kBAAC,gBAAD,CACAC,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEvB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,IAAK5D,EAAUqD,EAAKQ,MAAOC,IAAKT,EAAKf,OAClD,kBAACyB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYX,EAAKf,MACjB,kBAAC2B,EAAA,EAAD,KAAWZ,EAAKa,gBAOzB,SAASC,EAAT,GAA0D,IAAjCC,EAAgC,EAAhCA,SAAUpD,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,OAC7C,OAAgB,MAAZmD,GAAwC,IAApBA,EAASjE,OACxB,8BAIT,yBAAKJ,UAAU,uBACb,wCACA,kBAAC,UAAD,CAASuD,IAAE,GACRc,EAASC,KAAI,SAAAjD,GACZ,OACE,kBAAC,OAAD,CAAMkC,IAAE,EAACgB,IAAKlD,EAAQoB,IACpB,wBAAI8B,IAAKlD,EAAQoB,IACfpB,EAAQA,QACR,iCACMA,EAAQD,OADd,KACwB,IACrB,IAAIoD,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIC,KAAKA,KAAKC,MAAM1D,EAAQ2D,eAOlD,kBAAC,EAAD,CAAa9D,OAAQA,EAAQD,YAAaA,KAI9C,IAsDagE,EAtDO,SAACzE,GACnB,OAAIA,EAAM0E,UAEJ,yBAAKlF,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPQ,EAAM2E,QAEP,yBAAKnF,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKQ,EAAM2E,WAKH,MAAd3E,EAAM8C,KAEV,yBAAK8B,MAAM,aACR,yBAAKpF,UAAU,OACV,kBAACqF,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,QAAQC,MAAO,CAACC,eAAe,SAAxC,QACA,0BAAMC,QAAM,GAAZ,KAAgBjF,EAAM8C,KAAKf,OAE/B,yBAAKvC,UAAU,UACX,4BAAKQ,EAAM8C,KAAKf,MAChB,+BAGZ,yBAAKvC,UAAU,OACb,yBAAKA,UAAU,uBACb,kBAACqD,EAAD,CAAYC,KAAM9C,EAAM8C,QAG1B,yBAAKtD,UAAU,uBACX,kBAAC0D,EAAA,EAAD,KACA,kBAACU,EAAD,CAAgBC,SAAU7D,EAAM6D,SAC1CpD,YAAaT,EAAMS,YACnBC,OAAQV,EAAM8C,KAAKb,SAQV,+B,SCtMf,SAASiD,EAAT,GAA2C,IAAjBpC,EAAgB,EAAhBA,KAAgB,EAAV9B,QAC9B,OACI,kBAACkC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAM4B,GAAE,gBAAWhC,EAAKb,IAAM8C,MAAO,CAACC,eAAe,OAAOG,UAAU,SAASxC,MAAM,QAAQyC,WAAW,QACxG,kBAACjC,EAAA,EAAD,CAASkC,MAAM,OAAOhC,IAAK5D,EAAUqD,EAAKQ,MAAOC,IAAKT,EAAKf,OACvD,kBAACuD,EAAA,EAAD,KACI,kBAAC7B,EAAA,EAAD,KAAYX,EAAKf,SAQ7B,IA+COwD,EA/CI,SAACvF,GACR,IAAMwF,EAAOxF,EAAMyF,OAAOA,OAAO3B,KAAI,SAAChB,GAClC,OAAI9C,EAAMyF,OAAOf,UAET,yBAAKlF,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPQ,EAAMyF,OAAOd,QAEd,yBAAKnF,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKQ,EAAMyF,OAAOd,YAQtC,yBAAKnF,UAAU,sBAAuBuE,IAAKjB,EAAKb,IAC5C,kBAACiD,EAAD,CAAgBpC,KAAMA,EAAO9B,QAAShB,EAAMgB,cAIxD,OACE,yBAAKxB,UAAU,aACR,yBAAKA,UAAU,OACZ,kBAACqF,EAAA,EAAD,KACG,kBAAC,IAAD,CAAMC,GAAG,QAAQC,MAAO,CAACC,eAAe,SAAxC,QACC,0BAAMJ,MAAM,UAAZ,WAEJ,yBAAKpF,UAAU,UACX,oCACA,+BAGZ,yBAAKA,UAAU,OAERgG,K,iFC+BJE,E,kDAnGX,WAAY1F,GAAQ,IAAD,8BACf,cAAMA,IAEDG,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKyF,UAAY,EAAKA,UAAUzF,KAAf,gBACjB,EAAKE,MAAQ,CACXwF,WAAW,EACXvF,aAAa,GAGf,EAAKwF,YAAc,EAAKA,YAAY3F,KAAjB,gBAVJ,E,wDAcfI,KAAKC,SAAS,CACZqF,WAAYtF,KAAKF,MAAMwF,c,oCAGrBtF,KAAKC,SAAS,CACZF,aAAcC,KAAKF,MAAMC,gB,kCAGjByF,GACVxF,KAAKH,cACL4F,MAAM,aAAezF,KAAK0F,SAAStD,MAAQ,cAAgBpC,KAAK2F,SAASvD,MACnE,cAAgBpC,KAAK4F,SAASC,SACpCL,EAAMM,mB,+BAIJ,IAAD,OACL,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAK/G,UAAU,aACX,kBAACgH,EAAA,EAAD,CAAexF,QAASV,KAAKqF,YAC7B,kBAACc,EAAA,EAAD,CAAajH,UAAU,UAAUkH,KAAK,KAAI,yBAAKrD,IAAI,yBAAyB0B,MAAO,CAAC4B,OAAO,KAAMtB,MAAM,KAAMuB,WAAW,KAAMrD,IAAI,2BAClI,kBAACsD,EAAA,EAAD,CAAKrH,UAAU,UAAUsH,QAAM,GAEnB,kBAAChG,EAAA,EAAD,CAAQC,SAAO,EAACC,QAASV,KAAKH,YAAa4E,MAAO,CAACgC,QAAQ,KAAKC,MAAM,QAAQC,YAAY,OAAO,0BAAMzH,UAAU,wBAAjH,WAGZ,kBAACyB,EAAA,EAAD,CAAOC,OAAQZ,KAAKF,MAAMC,YAAac,OAAQb,KAAKH,aACxD,kBAACiB,EAAA,EAAD,CAAaD,OAAQb,KAAKH,aAA1B,SACA,kBAACkB,EAAA,EAAD,KAEQ,kBAAC6F,EAAA,EAAD,CAAM5F,SAAUhB,KAAKuF,aACrB,kBAACsB,EAAA,EAAD,KACI,kBAAC3F,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC2F,EAAA,EAAD,CAAO3E,KAAK,OAAOR,GAAG,WAAWF,KAAK,WAClCsF,SAAU,SAACC,GAAD,OAAW,EAAKtB,SAAWsB,MAE7C,kBAACH,EAAA,EAAD,KACI,kBAAC3F,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC2F,EAAA,EAAD,CAAO3E,KAAK,WAAWR,GAAG,WAAWF,KAAK,WACtCsF,SAAU,SAACC,GAAD,OAAW,EAAKrB,SAAWqB,MAE7C,kBAACH,EAAA,EAAD,CAAWI,OAAK,GACZ,kBAAC/F,EAAA,EAAD,CAAO+F,OAAK,GACR,kBAACH,EAAA,EAAD,CAAO3E,KAAK,WAAWV,KAAK,WAC5BsF,SAAU,SAACC,GAAD,OAAW,EAAKpB,SAAWoB,KAFzC,gBAMJ,kBAACxG,EAAA,EAAD,CAAQ2B,KAAK,SAASC,MAAM,SAASC,MAAM,WAA3C,YAIJ,kBAAC6E,EAAA,EAAD,CAAUtG,OAAQZ,KAAKF,MAAMwF,UAAWkB,QAAM,GAC1C,kBAACD,EAAA,EAAD,CAAKrH,UAAU,UAAUsH,QAAM,GAE3B,kBAAC,IAAD,CAAStH,UAAU,WAAYsF,GAAG,QAAQC,MAAO,CAACpC,MAAM,QAAQ8E,QAAQ,eAAeV,QAAQ,KAAKC,MAAM,OAAOU,OAAO,KAAK1C,eAAe,SAAS,0BAAMxF,UAAU,qBAArK,SAGA,kBAAC,IAAD,CAASA,UAAU,WAAWsF,GAAG,WAAWC,MAAO,CAACpC,MAAM,QAAQ8E,QAAQ,eAAeV,QAAQ,KAAKC,MAAM,OAAOU,OAAO,KAAK1C,eAAe,SAAS,0BAAMxF,UAAU,qBAAvK,aAGA,kBAAC,IAAD,CAASA,UAAU,WAAYsF,GAAG,QAAQC,MAAO,CAACpC,MAAM,QAAQ8E,QAAQ,eAAeV,QAAQ,KAAKC,MAAM,OAAOU,OAAO,KAAK1C,eAAe,SAAS,0BAAMxF,UAAU,qBAArK,SAEA,kBAAC,IAAD,CAASA,UAAU,WAAWsF,GAAG,aAAaC,MAAO,CAACpC,MAAM,QAAQ8E,QAAQ,eAAeV,QAAQ,KAAKC,MAAM,OAAOU,OAAO,KAAK1C,eAAe,SAAS,0BAAMxF,UAAU,6BAAzK,mBAMhB,kBAACmI,EAAA,EAAD,CAAW5C,MAAO,CAAC2C,OAAO,QACtB,yBAAKlI,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,8L,GA3FXoD,aC4CNgF,MA/Cf,SAAgB5H,GACZ,OACA,yBAAKR,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,0BAA0BuF,MAAO,CAAC0C,QAAQ,eAAeI,UAAU,MAC9E,qCACA,wBAAIrI,UAAU,iBACV,4BAAK,kBAAC,IAAD,CAAMsF,GAAG,QAAQC,MAAO,CAACC,eAAe,OAAOrC,MAAM,UAArD,SACL,4BAAI,kBAAC,IAAD,CAAMmC,GAAG,WAAUC,MAAO,CAACC,eAAe,OAAOrC,MAAM,UAAvD,aACJ,4BAAI,kBAAC,IAAD,CAAMmC,GAAG,QAAOC,MAAO,CAACC,eAAe,OAAOrC,MAAM,UAApD,SACJ,4BAAI,kBAAC,IAAD,CAAMmC,GAAG,aAAYC,MAAO,CAACC,eAAe,OAAOrC,MAAM,UAAzD,iBAGZ,yBAAKnD,UAAU,iBAAiBuF,MAAO,CAACiC,MAAM,SAASS,QAAQ,eAAeb,WAAW,QACrF,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGpH,UAAU,sBAJT,oBAIkD,6BAAM,6BAC5D,uBAAGA,UAAU,oBALT,oBAKgD,6BAAM,6BAC1D,uBAAGA,UAAU,yBANT,MAMuC,uBAAGkH,KAAK,6BAAR,wBAI3C,yBAAKlH,UAAU,oCAAoCuF,MAAO,CAACiC,MAAM,QAAQS,QAAQ,eAAgBR,YAAY,QACzG,yBAAKzH,UAAU,eACb,gCAAK,uBAAGA,UAAU,iCAAiCkH,KAAK,uBAAnD,KAA2E,uBAAGlH,UAAU,wBAAgC,6BAC7H,iCAAM,uBAAGA,UAAU,mCAAmCkH,KAAK,2CAArD,KAAiG,uBAAGlH,UAAU,iBAAgBuF,MAAO,CAACpC,MAAM,SAA3C,QAAkE,6BACzK,+BAAK,uBAAGnD,UAAU,mCAAmCkH,KAAK,+BAA8B,uBAAGlH,UAAU,kBAAb,QAA4C,6BACnI,2BAAI,uBAAGA,UAAU,kCAAkCkH,KAAK,uBAAsB,uBAAGlH,UAAU,gBAAeuF,MAAO,CAACpC,MAAM,YAAqB,6BAC7I,+BAAI,uBAAGnD,UAAU,iCAAiCkH,KAAK,uBAAsB,uBAAGlH,UAAU,gBAAgBuF,MAAO,CAACpC,MAAM,WAAoB,6BAC5I,2BAAG,uBAAGnD,UAAU,sBAAsBkH,KAAK,WAAU,uBAAGlH,UAAU,0BAI7E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6EClCdE,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDsC,EAAY,SAACtC,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpDgI,EAAW,SAACnI,GAAD,OAAUoI,MAAMC,OAAOrI,KAClCsI,GAAa,SAACtI,GAAD,MAAS,4CAA4CuI,KAAKvI,IAwM9DwI,G,kDAtMX,WAAYnI,GAAQ,IAAD,8BACf,cAAMA,IAIDC,aAAe,EAAKA,aAAaC,KAAlB,gBALL,E,yDASNM,GACTF,KAAKN,MAAMoI,aACP5H,EAAO6H,UACP7H,EAAO8H,SACP9H,EAAO+H,OACP/H,EAAOgI,MACPhI,EAAOiI,MACPjI,EAAOkI,YACPlI,EAAOmI,SAEXrI,KAAKN,MAAM4I,sB,+BAGN,IAAD,OAER,OACI,yBAAKpJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACqF,EAAA,EAAD,SAAa,kBAAC,IAAD,CAAMC,GAAG,QAAQC,MAAO,CAACC,eAAe,SAAxC,QACL,0BAAMJ,MAAM,UAAZ,cAER,yBAAKpF,UAAU,UACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACf,qDAEA,yBAAKA,UAAU,+BACP,2CACA,6DACyB,6BADzB,2BAEwB,6BAFxB,YAGS,6BACT,uBAAGA,UAAU,gBAJb,mBAI+C,6BAC/C,uBAAGA,UAAU,cALb,mBAK6C,6BAC7C,uBAAGA,UAAU,mBANb,KAMoC,uBAAGkH,KAAK,6BAAR,wBAG5C,yBAAKlH,UAAU,+BACX,oDAIJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAYqJ,KAAK,SAC5B,uBAAGA,KAAK,SAASrJ,UAAU,kBAAkBkH,KAAK,oBAAmB,uBAAGlH,UAAU,gBAAlF,SACA,uBAAGqJ,KAAK,SAASrJ,UAAU,eAAekH,KAAK,6BAA4B,uBAAGlH,UAAU,gBAAxF,UACA,uBAAGqJ,KAAK,SAASrJ,UAAU,kBAAkBkH,KAAK,6BAA4B,uBAAGlH,UAAU,qBAA3F,aAKR,yBAAKA,UAAU,mBACZ,yBAAKA,UAAU,UACZ,sDAEF,yBAAKA,UAAU,mBACV,kBAAC,OAAD,CAAMsC,MAAM,WAAWR,SAAU,SAACd,GAAD,OAAY,EAAKP,aAAaO,KACpE,kBAACe,EAAA,EAAD,CAAK/B,UAAU,cACH,kBAACgC,EAAA,EAAD,CAAOC,QAAQ,YAAYC,GAAI,GAA/B,cACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQM,KAAT,CAAcF,MAAM,aAAaG,GAAG,YAAYF,KAAK,YACjDG,YAAY,aACZ1C,UAAU,eACV2C,WAAY,CACRzC,WAAU0C,UAAWA,EAAU,GAAIvC,UAAWA,EAAU,OAGhE,kBAAC,SAAD,CACIL,UAAU,cACVsC,MAAM,aACNO,KAAK,UACLC,SAAU,CACN5C,SAAU,WACV0C,UAAW,oCACXvC,UAAW,qCAK3B,kBAAC0B,EAAA,EAAD,CAAK/B,UAAU,cACX,kBAACgC,EAAA,EAAD,CAAOC,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQM,KAAT,CAAcF,MAAM,YAAYG,GAAG,WAAWF,KAAK,WAC/CG,YAAY,YACZ1C,UAAU,eACV2C,WAAY,CACRzC,WAAU0C,UAAWA,EAAU,GAAIvC,UAAWA,EAAU,OALpE,IAOY,kBAAC,SAAD,CACHL,UAAU,cACVsC,MAAM,YACNO,KAAK,UACLC,SAAU,CACN5C,SAAU,WACV0C,UAAW,oCACXvC,UAAW,qCAK3B,kBAAC0B,EAAA,EAAD,CAAK/B,UAAU,cACX,kBAACgC,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQM,KAAT,CAAcF,MAAM,UAAUG,GAAG,SAASF,KAAK,SAC3CG,YAAY,cACZ1C,UAAU,eACV2C,WAAY,CACRzC,WAAU0C,UAAWA,EAAU,GAAIvC,UAAWA,EAAU,IAAKiI,cAGrE,kBAAC,SAAD,CACItI,UAAU,cACVsC,MAAM,UACNO,KAAK,UACLC,SAAU,CACN5C,SAAU,WACV0C,UAAW,iCACXvC,UAAW,6BACXiI,SAAU,wBA9D9B,KAkEY,kBAACvG,EAAA,EAAD,CAAK/B,UAAU,cACpB,kBAACgC,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQM,KAAT,CAAcF,MAAM,SAASG,GAAG,QAAQF,KAAK,QACzCG,YAAY,QACZ1C,UAAU,eACV2C,WAAY,CACRzC,WAAUuI,iBAGlB,kBAAC,SAAD,CACIzI,UAAU,cACVsC,MAAM,SACNO,KAAK,UACLC,SAAU,CACN5C,SAAU,WACVuI,WAAY,6BAK5B,kBAAC1G,EAAA,EAAD,CAAK/B,UAAU,cACX,kBAACmC,EAAA,EAAD,CAAKD,GAAI,CAACE,KAAM,EAAGkH,OAAQ,IACvB,yBAAKtJ,UAAU,cACX,kBAACgC,EAAA,EAAD,CAAO+F,OAAK,GACR,kBAAC,UAAQwB,SAAT,CAAkBjH,MAAM,SAASC,KAAK,QAClCvC,UAAU,qBAFlB,IAGa,IACL,0DAIhB,kBAACmC,EAAA,EAAD,CAAKD,GAAI,CAACE,KAAM,EAAGkH,OAAQ,IACvB,kBAAC,UAAQjH,OAAT,CAAgBC,MAAM,eAAeC,KAAK,cACtCvC,UAAU,gBACV,wCACA,4CAIZ,kBAAC+B,EAAA,EAAD,CAAK/B,UAAU,cAAa,kBAACgC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,GAA7B,iBACxB,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQa,SAAT,CAAkBT,MAAM,WAAWG,GAAG,UAAUF,KAAK,UACjDS,KAAK,KACLhD,UAAU,mBAGtB,kBAAC+B,EAAA,EAAD,CAAK/B,UAAU,cACX,kBAACmC,EAAA,EAAD,CAAKD,GAAI,CAACE,KAAK,GAAIkH,OAAQ,IACvB,kBAAChI,EAAA,EAAD,CAAQ2B,KAAK,SAASE,MAAM,WAA5B,2B,GAzLdC,a,UCJtB,SAASoG,GAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,KAAMvE,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAE9B,OAAID,EAEQ,kBAAC,EAAD,MAGHC,EAEG,4BAAKA,GAIN,6BACH,kBAAC,gBAAD,CACA5B,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASE,IAAK5D,EAAUwJ,EAAK3F,MAAOC,IAAK0F,EAAKlH,OAC9C,kBAACyB,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KAAYwF,EAAKlH,MAChBkH,EAAKC,YAAc,kBAACC,GAAA,EAAD,KAAeF,EAAKC,aAA8B,KACtE,kBAACxF,EAAA,EAAD,KAAWuF,EAAKtF,iBA4BrByF,OArBf,SAAcpJ,GACV,OACA,yBAAKR,UAAU,aACH,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,qBAEf,kBAACwJ,GAAD,CAAYC,KAAMjJ,EAAM8C,KAAM4B,UAAW1E,EAAMqJ,cAAe1E,QAAS3E,EAAMsJ,iBAE7E,yBAAK9J,UAAU,qBACf,kBAACwJ,GAAD,CAAYC,KAAMjJ,EAAMuJ,UAAW7E,UAAW1E,EAAMwJ,aAAc7E,QAAS3E,EAAMyJ,gBAEjF,yBAAKjK,UAAU,qBACf,kBAACwJ,GAAD,CACJC,KAAMjJ,EAAM0J,QACZhF,UAAW1E,EAAM2J,eACjBhF,QAAS3E,EAAM4J,qB,6BC4DZC,OA1Gf,SAAe7J,GAEf,SAAS8J,EAAT,GAAgC,IAATC,EAAQ,EAARA,OACnB,OACI,yBAAKhG,IAAKgG,EAAO9H,GAAIzC,UAAU,eAC/B,kBAACwK,GAAA,EAAD,CAAOC,IAAI,MACP,kBAACD,GAAA,EAAD,CAAOE,MAAI,EAACC,QAAM,EAACpF,MAAO,CAACM,MAAM,OAAOoC,QAAQ,iBAElD,kBAACuC,GAAA,EAAD,CAAOI,QAAM,EAAC/G,IAAK5D,EAAUsK,EAAOzG,MAAOC,IAAKwG,EAAOhI,KAAOgD,MAAO,CAAC4B,OAAO,MAAMtB,MAAM,UACvF,kBAAC2E,GAAA,EAAD,CAAOE,MAAI,EAACC,QAAM,EAACpF,MAAO,CAAC0C,QAAQ,eAAgBpC,MAAM,SACzD,kBAAC2E,GAAA,EAAD,CAAOK,MAAI,EAAC7K,UAAU,QAClB,kBAACwK,GAAA,EAAD,CAAOM,SAAO,EAACvF,MAAO,CAACwF,SAAS,SAAUR,EAAOhI,MACjD,2BAAIgI,EAAOb,aACvB,2BAAIa,EAAOpG,iBAQX,SAAS6G,EAAT,GAAwD,EAA/Bd,QAAgC,IAAvBhF,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QACzC,OAAID,EACK,kBAAC,EAAD,MACEC,EACF,4BAAKA,GAGV,kBAAC,UAAD,CAAS5B,IAAE,GACR/C,EAAM0J,QAAQ5F,KAAI,SAAAiG,GAAM,OACvB,kBAAC,OAAD,CAAMhH,IAAE,EAACgB,IAAKgG,EAAO9H,IACnB,kBAAC6H,EAAD,CAAc/F,IAAKgG,EAAO9H,GAAI8H,OAAQA,SAOpD,OACI,yBAAKvK,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACqF,EAAA,EAAD,KACA,kBAAC,IAAD,CAAMC,GAAG,QAAQC,MAAO,CAACC,eAAe,SAAxC,QACQ,0BAAMJ,MAAM,UAAZ,eAER,yBAAKpF,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAAC0D,EAAA,EAAD,KACI,kBAACuH,GAAA,EAAD,CAAYjL,UAAU,yBAAtB,qBACA,kBAACgE,EAAA,EAAD,KACI,wBAAIhE,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAAC0D,EAAA,EAAD,KACI,kBAACM,EAAA,EAAD,CAAUhE,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAMkL,MAAM,gBAAZ,0EAQpB,yBAAKlL,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAACwK,GAAA,EAAD,CAAOW,MAAI,GACX,kBAACH,EAAD,CACNd,QAAS1J,EAAM+J,OACfrF,UAAW1E,EAAM4K,cACjBjG,QAAS3E,EAAM6K,qB,SC3EhBxB,GAAgB,iBAAO,CAChC5G,KCxB0B,mBD2BjBqI,GAAe,SAACC,GAAD,MAAc,CACtCtI,KC3ByB,gBD4BzBuI,QAASD,IAGAE,GAAY,SAACxF,GAAD,MAAa,CAClChD,KC/BsB,aDgCtBuI,QAASvF,IAwBAyF,GAAiB,SAACH,GAAD,MAAc,CACxCtI,KC/D2B,kBDgE3BuI,QAASD,IAGAI,GAAc,SAACtH,GAAD,MAAe,CACtCpB,KCrEwB,eDsExBuI,QAASnH,IA0BAuH,GAAgB,iBAAO,CAChC3I,KC/F0B,mBDkGjB4I,GAAe,SAACN,GAAD,MAAc,CACtCtI,KCjGyB,gBDkGzBuI,QAASD,IAGAO,GAAY,SAACC,GAAD,MAAa,CAClC9I,KCvGsB,aDwGtBuI,QAASO,IA8DE5B,GAAiB,iBAAO,CACnClH,KClK2B,oBDqKhB+I,GAAgB,SAAAT,GAAO,MAAK,CACvCtI,KCpK0B,iBDqK1BuI,QAASD,IAGEU,GAAa,SAAA/B,GAAO,MAAK,CACpCjH,KC1KuB,cD2KvBuI,QAAStB,IElIPgC,G,kLAMApL,KAAKN,MAAM2L,cACXrL,KAAKN,MAAM4L,gBACXtL,KAAKN,MAAM6L,cACXvL,KAAKN,MAAM8L,iB,+BAEN,IAAD,OA6BJ,OACE,6BACE,kBAAC,EAAD,MACA,6BAEA,kBAAC,mBAAD,KACE,kBAAC,iBAAD,CAAe/H,IAAKzD,KAAKN,MAAM+L,SAAShI,IAAKiI,WAAW,OAAOC,QAAS,KACtE,kBAAC,IAAD,CAAQF,SAAUzL,KAAKN,MAAM+L,UACzB,kBAAC,IAAD,CAAOG,KAAK,QAAQC,UApCf,WACf,OACE,kBAAC,GAAD,CACArJ,KAAM,EAAK9C,MAAMyF,OAAOA,OAAO2G,QAAO,SAACtJ,GAAD,OAAUA,EAAKuJ,YAAU,GAC/DhD,cAAe,EAAKrJ,MAAMyF,OAAOf,UACjC4H,YAAa,EAAKtM,MAAMyF,OAAOd,QAC/B4E,UAAW,EAAKvJ,MAAMuM,WAAWA,WAAWH,QAAO,SAACI,GAAD,OAAWA,EAAMH,YAAU,GAC9E7C,aAAc,EAAKxJ,MAAMuM,WAAW7H,UACpC+E,aAAc,EAAKzJ,MAAMuM,WAAW5H,QACpC+E,QAAS,EAAK1J,MAAM0J,QAAQA,QAAQ0C,QAAO,SAAC1C,GAAD,OAAaA,EAAQ2C,YAAU,GAC1E1C,eAAgB,EAAK3J,MAAM0J,QAAQhF,UACnCkF,eAAgB,EAAK5J,MAAM0J,QAAQ/E,aA0B3B,kBAAC,IAAD,CACA8H,OAAK,EACLP,KAAK,WACLC,UAAW,kBACT,kBAAC,GAAD,CACEzC,QAAS,EAAK1J,MAAM0J,QAAQA,QAC5BkB,cAAe,EAAK5K,MAAM0J,QAAQhF,UAClCmG,cAAe,EAAK7K,MAAM0J,QAAQ/E,aAGtC,kBAAC,IAAD,CAAO8H,OAAK,EAACP,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAM1G,OAAQ,EAAKzF,MAAMyF,YACpE,kBAAC,IAAD,CAAOyG,KAAK,gBAAgBC,UAhCzB,SAAC,GAAa,IAAZO,EAAW,EAAXA,MACnB,OACE,kBAAC,EAAD,CAAQ5J,KAAM,EAAK9C,MAAMyF,OAAOA,OAAO2G,QAAO,SAACtJ,GAAD,OAAUA,EAAKb,KAAO0K,SAASD,EAAME,OAAOlM,OAAO,OAAK,GACtGgE,UAAW,EAAK1E,MAAMyF,OAAOf,UAC7BC,QAAS,EAAK3E,MAAMyF,OAAOd,QAC3Bd,SAAU,EAAK7D,MAAM6D,SAASA,SAASuI,QAAO,SAACvL,GAAD,OAAaA,EAAQH,SAAWiM,SAASD,EAAME,OAAOlM,OAAO,OAC3GmM,gBAAiB,EAAK7M,MAAM6D,SAASc,QACrClE,YAAa,EAAKT,MAAMS,iBA0BZ,kBAAC,IAAD,CACAgM,OAAK,EACLP,KAAK,aACLC,UAAW,kBACT,kBAAC,GAAD,CACEvD,kBAAmB,EAAK5I,MAAM4I,kBAC9BR,aAAc,EAAKpI,MAAMoI,kBAI7B,kBAAC,IAAD,CAAUtD,GAAG,cAKrB,kBAAC,EAAD,W,GA5ESlC,aAkFFkK,eAAWC,oBAtHJ,SAAA3M,GACtB,MAAO,CACLqF,OAAQrF,EAAMqF,OACd5B,SAAUzD,EAAMyD,SAChB0I,WAAYnM,EAAMmM,WAClB7C,QAAStJ,EAAMsJ,YAIQ,SAAAsD,GAAQ,MAAK,CAAGvM,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqCmM,EFsFlE,SAACtM,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACmM,GAE7D,IAAMC,EAAa,CACfvM,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIb,OAFAoM,EAAWzI,MAAO,IAAIF,MAAO4I,cAEtBC,MAAM1N,EAAU,WAAY,CAC/B2N,OAAQ,OACR/C,KAAMgD,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhBC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIV,EA3II,SAACnM,GAAD,MAAc,CACpC4B,KCJuB,cDKvBuI,QAASnK,GAyIkBoN,CAAWP,OACrCQ,OAAM,SAAAN,GAAYO,QAAQC,IAAI,gBAAiBR,EAAMjF,SAAU5C,MAAM,4CAA4C6H,EAAMjF,aEtHtBlI,CAAYC,EAAQC,EAAQC,EAAQC,KACxI8K,YAAa,WAAQqB,GFnBU,SAACA,GAI9B,OAFAA,EAAS3D,IAAc,IAEhB8D,MAAM1N,EAAU,UACtBgO,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMjF,YAGrC8E,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAhI,GAAM,OAAIuH,EAAS/B,GAAUxF,OAClCyI,OAAM,SAAAN,GAAK,OAAIZ,EAASlC,GAAa8C,EAAMjF,iBEA9CC,kBAAmB,WAAQoE,EAASqB,UAAQC,MAAM,cAClD1C,cAAe,kBAAMoB,GFgBY,SAACA,GAChC,OAAOG,MAAM1N,EAAU,YACtBgO,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMjF,YAGrC8E,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA5J,GAAQ,OAAImJ,EAAS7B,GAAYtH,OACtCqK,OAAM,SAAAN,GAAK,OAAIZ,EAAS9B,GAAe0C,EAAMjF,iBEhChDkD,YAAa,kBAAMmB,GF8CY,SAACA,GAI9B,OAFAA,EAAS5B,MAEF+B,MAAM1N,EAAU,cACtBgO,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMjF,YAGrC8E,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAlC,GAAM,OAAIyB,EAAS1B,GAAUC,OAClC2C,OAAM,SAAAN,GAAK,OAAIZ,EAAS3B,GAAauC,EAAMjF,iBEjE9CmD,aAAc,kBAAMkB,GFoHY,SAAAA,GAG9B,OAFAA,EAASrD,MAEFwD,MAAM1N,EAAU,WACpBgO,MACC,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEE,MADc,IAAIC,MAAMD,EAAMjF,YAIjC8E,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA/D,GAAO,OAAIsD,EAASvB,GAAW/B,OACpCwE,OAAM,SAAAN,GAAK,OAAIZ,EAASxB,GAAcoC,EAAMjF,iBE1IjDP,aAAc,SACZC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAPY,OASZqE,EFiJ0B,SAC1B3E,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAP0B,OAQvB,SAAAqE,GACH,IAAMuB,EAAc,CAClBlG,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbC,QAASA,GAGX,OAAOwE,MAAM1N,EAAU,WAAY,CACjC2N,OAAQ,OACR/C,KAAMgD,KAAKC,UAAUiB,GACrBhB,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEZC,MACC,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACE,MAAMA,KAGTH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OACZ3H,MAAM,+BAAiCsH,KAAKC,UAAUI,OAEvDQ,OAAM,SAAAN,GACLO,QAAQC,IAAI,iBAAkBR,EAAMjF,SACpC5C,MAAM,6CAA+C6H,EAAMjF,aEjM7DP,CACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QAsFoBoE,CAA6CrB,K,SCnI5D8C,GAAS,WAEM,IAFLpO,EAEI,uDAFI,CAAEsE,WAAW,EACxCC,QAAS,KACTc,OAAO,IAAKgJ,EAAW,uCACvB,OAAQA,EAAOhM,MACX,IFEkB,aEDd,OAAO,gBAAIrC,EAAX,CAAkBsE,WAAW,EAAOC,QAAS,KAAMc,OAAQgJ,EAAOzD,UAEtE,IFHsB,iBEIlB,OAAO,gBAAI5K,EAAX,CAAkBsE,WAAW,EAAMC,QAAS,KAAMc,OAAQ,KAE9D,IFLqB,gBEMjB,OAAO,gBAAIrF,EAAX,CAAkBsE,WAAW,EAAOC,QAAS8J,EAAOzD,UAExD,QACI,OAAO5K,ICfNsO,GAAW,WAAoD,IAAnDtO,EAAkD,uDAA1C,CAAEuE,QAAS,KAAMd,SAAS,IAAK4K,EAAW,uCACzE,OAAQA,EAAOhM,MACb,IHFwB,eGGtB,OAAO,gBAAIrC,EAAX,CAAkBuE,QAAS,KAAMd,SAAU4K,EAAOzD,UAEpD,IHJ2B,kBGKzB,OAAO,gBAAI5K,EAAX,CAAkBuE,QAAS8J,EAAOzD,UAEpC,IHVuB,cGWnB,IAAInK,EAAU4N,EAAOzD,QACrB,OAAO,gBAAK5K,EAAZ,CAAmByD,SAAUzD,EAAMyD,SAAS8K,OAAO9N,KAEvD,QACE,OAAOT,ICbAwO,GAAa,WAE0C,IAFzCxO,EAEwC,uDAF/B,CAAEsE,WAAW,EACTC,QAAS,KACT4H,WAAW,IAAKkC,EAAW,uCAC/D,OAAQA,EAAOhM,MACX,IJDkB,aIElB,OAAO,gBAAIrC,EAAX,CAAkBsE,WAAW,EAAOC,QAAS,KAAM4H,WAAYkC,EAAOzD,UAEtE,IJLsB,iBIMlB,OAAO,gBAAI5K,EAAX,CAAkBsE,WAAW,EAAMC,QAAS,KAAM4H,WAAY,KAElE,IJNqB,gBIOjB,OAAO,gBAAInM,EAAX,CAAkBsE,WAAW,EAAOC,QAAS8J,EAAOzD,UAExD,QACE,OAAO5K,ICdJyO,GAAU,WAE0C,IAFzCzO,EAEwC,uDAF/B,CAAEsE,WAAW,EACNC,QAAS,KACT+E,QAAQ,IAAK+E,EAAW,uCAC5D,OAAQA,EAAOhM,MAAS,ILMD,cKLnB,OAAO,gBACFrC,EADL,CAEEsE,WAAW,EACXC,QAAS,KACT+E,QAAS+E,EAAOzD,UAGlB,ILHuB,kBKInB,OAAO,gBAAI5K,EAAX,CAAkBsE,WAAW,EAAMC,QAAS,KAAM+E,QAAS,KAE/D,ILJsB,iBKKlB,OAAO,gBAAItJ,EAAX,CAAkBsE,WAAW,EAAOC,QAAS8J,EAAOzD,UAExD,QACE,OAAO5K,I,mDCpBJ0O,GAAkB,CAC3BzG,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbC,QAAS,ICAPoG,GCKYC,uBAEVC,2BAAgB,cACZxJ,OAAQ+I,GACR3K,SAAU6K,GACVnC,WAAYqC,GACZlF,QAASmF,IACNK,sBAAY,CACXC,SAAUL,OAGlBM,2BAAgBC,KAAOC,ODLhBC,G,uKANX,OACA,kBAAC,YAAD,CAAUR,MAAOA,IAAO,kBAAC,IAAD,KAAe,6BAC1C,kBAAC,GAAD,a,GALiBnM,a,cEAlB4M,IAASC,OAAO,kBAAC,GAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.45ebdbda.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle, Breadcrumb, Button, Modal, ModalHeader, Row, ModalBody, Label, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './components/Loading';\nimport { baseUrl } from './baseUrl'; \nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass Commentform extends Component {\n  constructor(props) {\n      super(props);\n      this.handleSubmit= this.handleSubmit.bind(this);\n      this.toggleModal = this.toggleModal.bind(this);\n\n      this.state = {\n        isModalOpen: false,\n\n  };\n}\n\ntoggleModal() {\n  this.setState({\n    isModalOpen: !this.state.isModalOpen\n  });\n}\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n  }\n\n  render() {\n      return(\n        <>\n              <Button outline onClick={this.toggleModal}>\n          <span className=\"fa fa-pencil\" /> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={this.handleSubmit}>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"rating\" md={12}>\n                  Rating\n                </Label>\n                <Col md={{ size: 12 }}>\n                  <Control.select\n                    model=\".rating\"\n                    name=\"rating\"\n                    className=\"form-control\"\n                  >\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"author\" md={12}>\n                  Your Name\n                </Label>\n                <Col md={12}>\n                  <Control.text\n                    model=\".author\"\n                    id=\"author\"\n                    name=\"author\"\n                    placeholder=\"Your Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15)\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".author\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\"\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"comment\" md={12}>\n                  Comment\n                </Label>\n                <Col md={12}>\n                  <Control.textarea\n                    model=\".comment\"\n                    id=\"comment\"\n                    name=\"comment\"\n                    rows={5}\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n          </>\n      );\n  }\n}\n\nfunction RenderDish({dish}) {\n        return (\n          <FadeTransform\n          in\n          transformProps={{\n              exitTransform: 'scale(0.5) translateY(-50%)'\n          }}>\n      <Card>\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n          <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>{dish.description}</CardText>\n          </CardBody>\n      </Card>\n      </FadeTransform>\n        );\n      }\n      \n     function RenderComments({comments, postComment, dishId}) {\n        if (comments == null || comments.length === 0) {\n          return <div></div>;\n        }\n    else{\n      return (\n        <div className=\"col-12 col-md-5 m-1\">\n          <h4>Comments</h4>\n          <Stagger in>\n            {comments.map(comment => {\n              return (\n                <Fade in key={comment.id}>\n                  <li key={comment.id}>\n                   {comment.comment}\n                    <p>\n                      -- {comment.author} ,{\" \"}\n                      {new Intl.DateTimeFormat(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"short\",\n                        day: \"2-digit\"\n                      }).format(new Date(Date.parse(comment.date)))}\n                    </p>\n                  </li>\n                </Fade>\n              );\n            })}\n          </Stagger>\n          <Commentform dishId={dishId} postComment={postComment} />\n        </div>\n      )\n      }}\n      const  DishDetail = (props) => {\n        if (props.isLoading) {\n          return(\n              <div className=\"container\">\n                  <div className=\"row\">            \n                      <Loading />\n                  </div>\n              </div>\n          );\n      }\n      else if (props.errMess) {\n          return(\n              <div className=\"container\">\n                  <div className=\"row\">            \n                      <h4>{props.errMess}</h4>\n                  </div>\n              </div>\n          );\n      }\n      else  if (props.dish != null) {\n          return (\n            <div class=\"container\">\n               <div className=\"row\">\n                    <Breadcrumb>\n                        <Link to=\"/menu\" style={{textDecoration:\"none\"}}>Menu</Link>\n                        <span active>/ {props.dish.name}</span>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>                \n                </div>\n            <div className=\"row\">\n              <div className=\"col-12 col-md-5 m-1\">\n                <RenderDish dish={props.dish} />\n                \n              </div>\n              <div className=\"col-12 col-md-5 m-1\">\n                  <Card>\n                  <RenderComments comments={props.comments}\n        postComment={props.postComment}\n        dishId={props.dish.id}\n      />\n</Card> \n              </div>\n            </div>\n            </div>\n          );\n        } else {\n          return <div></div>;\n        }\n      }\n    \n    \n    export default DishDetail;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,CardTitle , Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './components/Loading';\n\nimport { baseUrl } from './baseUrl';\n     /* function  Renderdish ({dish,onClick}){\n        return (\n          <Card\n              onClick={() => onClick(dish.id)}>\n              <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n              <CardImgOverlay>\n                  <CardTitle>{dish.name}</CardTitle>\n              </CardImgOverlay>\n          </Card>\n      );\n  }*/\n  function RenderMenuItem ({dish, onClick}) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} style={{textDecoration:\"none\",fontStyle:\"Italic\",color:\"green\",fontWeight:\"200\"}} >\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\n\n        const Menu=(props)=>{\n            const menu = props.dishes.dishes.map((dish) => {\n                if (props.dishes.isLoading) {\n                    return(\n                        <div className=\"container\">\n                            <div className=\"row\">            \n                                <Loading />\n                            </div>\n                        </div>\n                    );\n                }\n                else if (props.dishes.errMess) {\n                    return(\n                        <div className=\"container\">\n                            <div className=\"row\"> \n                                <div className=\"col-12\">\n                                    <h4>{props.dishes.errMess}</h4>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                }\n              \n              return (\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\n                    <RenderMenuItem dish={dish}  onClick={props.onClick}/>\n                </div>\n              )\n          });\n        return (\n          <div className=\"container\">\n                 <div className=\"row\">\n                    <Breadcrumb>\n                       <Link to=\"/home\" style={{textDecoration:\"none\"}}>Home</Link>\n                        <span class=\"active\">/ Menu</span>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>                \n                </div>\n            <div className=\"row\">\n              \n                  {menu}</div>\n             </div>\n        )\n    }\nexport default Menu;\n","import React,{Component} from 'react'\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        };\n\n        this.handleLogin = this.handleLogin.bind(this);\n      }\n\n      toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });}\n        toggleModal() {\n            this.setState({\n              isModalOpen: !this.state.isModalOpen\n            });\n          }\n          handleLogin(event) {\n            this.toggleModal();\n            alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n                + \" Remember: \" + this.remember.checked);\n            event.preventDefault();\n    \n        }\n\n    render() {\n        return(\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' style={{height:\"5%\", width:\"3%\", marginLeft:\"0\"}} alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Nav className=\"ml-auto\" navbar>\n                             \n                                    <Button outline onClick={this.toggleModal} style={{padding:\"1%\",float:\"right\",marginRight:\"5%\"}}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                \n                            </Nav>\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                   \n                            <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav className=\"mr-auto\" navbar>\n                       \n                                <NavLink className=\"nav-link\"  to='/home' style={{color:\"white\",display:\"inline-block\",padding:\"1%\",float:\"auto\",margin:\"1%\",textDecoration:\"none\"}}><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                           \n                            \n                                <NavLink className=\"nav-link\" to='/aboutus' style={{color:\"white\",display:\"inline-block\",padding:\"1%\",float:\"auto\",margin:\"1%\",textDecoration:\"none\"}}><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                            \n                           \n                                <NavLink className=\"nav-link\"  to='/menu' style={{color:\"white\",display:\"inline-block\",padding:\"1%\",float:\"auto\",margin:\"1%\",textDecoration:\"none\"}}><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                            \n                                <NavLink className=\"nav-link\" to='/contactus' style={{color:\"white\",display:\"inline-block\",padding:\"1%\",float:\"auto\",margin:\"1%\",textDecoration:\"none\"}}><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                           \n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron style={{margin:\"0px\"}}>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom'\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\" style={{display:\"inline-block\",marginTop:\"0\"}}>\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li ><Link to='/home' style={{textDecoration:\"none\",color:\"black\"}}>Home</Link></li>\n                        <li><Link to='/aboutus'style={{textDecoration:\"none\",color:\"black\"}}>About Us</Link></li>\n                        <li><Link to='/menu'style={{textDecoration:\"none\",color:\"black\"}}>Menu</Link></li>\n                        <li><Link to='/contactus'style={{textDecoration:\"none\",color:\"black\"}}>Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\" style={{float:\"center\",display:\"inline-block\",marginLeft:\"20%\"}}>\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i> : +852 1234 5678<br /><br/>\n\t\t              <i className=\"fa fa-fax fa-lg\"></i> : +852 8765 4321<br /><br/>\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>:  <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\" style={{float:\"right\",display:\"inline-block\", marginRight:\"20%\", }}>\n                    <div className=\"text-center\">\n                      <p>  <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\">  <i className=\"fa fa-google-plus\"></i></a></p><br></br>\n                      <p>   <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\">  <i className=\"fa fa-facebook\"style={{color:\"blue\"}}>  </i></a></p><br></br>\n                      <p > <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\">  </i></a></p><br></br>\n                       <p ><a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"style={{color:\"blue\"}}></i></a></p><br></br>\n                       <p> <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" style={{color:\"red\"}}></i></a></p><br></br>\n                       <p><a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a></p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","\nimport React, { Component } from 'react';\n\nimport { Breadcrumb, BreadcrumbItem,\n    Button, Row, Col, Label } from 'reactstrap';\nimport { Control, Errors,Form ,actions} from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nclass Contact extends Component{\n    constructor(props) {\n        super(props);\n\n  \n      \n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n\n    handleSubmit(values) {\n        this.props.postFeedback(\n            values.firstname,\n            values.lastname,\n            values.telnum,\n            values.email,\n            values.agree,\n            values.contactType,\n            values.message\n          );\n        this.props.resetFeedbackForm();\n    }\n\n    render(){\n       \n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb> <Link to=\"/home\" style={{textDecoration:\"none\"}}>Home</Link>\n                        <span class=\"active\">/ Contact</span>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n\n            \n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n\n                <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                         <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         /> <Errors\n                                         className=\"text-danger\"\n                                         model=\".lastname\"\n                                         show=\"touched\"\n                                         messages={{\n                                             required: 'Required',\n                                             minLength: 'Must be greater than 2 characters',\n                                             maxLength: 'Must be 15 characters or less'\n                                         }}\n                                      />\n                                 </Col>\n                             </Row>\n                             <Row className=\"form-group\">\n                                 <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                 <Col md={10}>\n                                     <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                         placeholder=\"Tel. Number\"\n                                         className=\"form-control\"\n                                         validators={{\n                                             required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                         }}\n                                          />\n                                     <Errors\n                                         className=\"text-danger\"\n                                         model=\".telnum\"\n                                         show=\"touched\"\n                                         messages={{\n                                             required: 'Required',\n                                             minLength: 'Must be greater than 2 numbers',\n                                             maxLength: 'Must be 15 numbers or less',\n                                             isNumber: 'Must be a number'\n                                         }}\n                                      />\n                                 </Col>\n                             </Row>  <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\"><Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    \n                    </div>\n               </div>\n\n\n        </div>\n    );\n}}\nexport default Contact;","import React from \"react\";\nimport { Loading } from './Loading';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\n\nimport { FadeTransform } from 'react-animation-components';\n\nimport { baseUrl } from '../baseUrl';    \nfunction RenderCard({item, isLoading, errMess}) {\n    \n        if (isLoading) {\n            return(\n                    <Loading />\n            );\n        }\n        else if (errMess) {\n            return(\n                    <h4>{errMess}</h4>\n            );\n        }\n        else \n            return(<div>\n                <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                    <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform></div>\n            );\n    \n    }\nfunction Home(props){\n    return(\n    <div className=\"container\">\n                <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                   \n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard\n            item={props.leaders}\n            isLoading={props.leadersLoading}\n            errMess={props.leadersErrMess}\n          />\n                </div>\n            </div>\n    </div>\n    )}\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from \"../baseUrl\";\nimport { Loading } from \"./Loading\";\nimport { Fade, Stagger } from \"react-animation-components\";\n\n\nfunction About(props) {\n\nfunction RenderLeader({leader}){\n    return(\n        <div key={leader.id} className=\"col-12 mt-5\">\n        <Media tag=\"li\"  >\n            <Media left middle style={{width:\"20vw\",display:\"inline-block\"}} >\n                \n          <Media object src={baseUrl + leader.image} alt={leader.name}  style={{height:\"20%\",width:\"50%\"}}/></Media>\n            <Media left middle style={{display:\"inline-block\" ,width:\"60vw\"}}>\n            <Media body className=\"ml-5\">\n                <Media heading style={{fontSize:\"150%\"}}>{leader.name}</Media>\n                <p>{leader.designation}</p>\n    <p>{leader.description}</p>\n            </Media></Media>\n        </Media>\n    </div>\n\n    );\n}\n\n    function RenderContent({ leaders, isLoading, errMess }) {\n        if (isLoading) {\n          return <Loading />;\n        } else if (errMess) {\n          return <h4>{errMess}</h4>;\n        } else\n          return (\n            <Stagger in>\n              {props.leaders.map(leader => (\n                <Fade in key={leader.id}>\n                  <RenderLeader key={leader.id} leader={leader} />\n                </Fade>\n              ))}\n            </Stagger>\n          );\n      }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                <Link to=\"/home\" style={{textDecoration:\"none\"}}>Home</Link>\n                        <span class=\"active\">/ About Us</span>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                    <RenderContent\n              leaders={props.leader}\n              isLoading={props.leaderLoading}\n              errMess={props.leaderErrMess}\n            />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../dishes';\nimport { baseUrl } from '../baseUrl';\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\nexport const fetchLeaders = () => dispatch => {\n    dispatch(leadersLoading());\n  \n    return fetch(baseUrl + \"leaders\")\n      .then(\n        response => {\n          if (response.ok) {\n            return response;\n          } else {\n            var error = new Error(\n              \"Error \" + response.status + \": \" + response.statusText\n            );\n            error.response = response;\n            throw error;\n          }\n        },\n        error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n        }\n      )\n      .then(response => response.json())\n      .then(leaders => dispatch(addLeaders(leaders)))\n      .catch(error => dispatch(leadersFailed(error.message)));\n  };\n  export const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n  });\n  \n  export const leadersFailed = errmess => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  });\n  \n  export const addLeaders = leaders => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  });\n  \n  export const postFeedback = (\n    firstname,\n    lastname,\n    telnum,\n    email,\n    agree,\n    contactType,\n    message\n  ) => dispatch => {\n    const newFeedback = {\n      firstname: firstname,\n      lastname: lastname,\n      telnum: telnum,\n      email: email,\n      agree: agree,\n      contactType: contactType,\n      message: message\n    };\n  \n    return fetch(baseUrl + \"feedback\", {\n      method: \"POST\",\n      body: JSON.stringify(newFeedback),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    })\n      .then(\n        response => {\n          if (response.ok) {\n            return response;\n          } else {\n            var error = new Error(\n              \"Error \" + response.status + \": \" + response.statusText\n            );\n            error.response = response;\n            throw error;\n          }\n        },\n        error => {\n          throw error;\n        }\n      )\n      .then(response => response.json())\n      .then(response =>\n        alert(\"Thank you for your feedback!\" + JSON.stringify(response))\n      )\n      .catch(error => {\n        console.log(\"post feedbacks\", error.message);\n        alert(\"Your feedback could not be posted\\nError: \" + error.message);\n      });\n  };","export const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\nexport const ADD_LEADERS = \"ADD_LEADERS\";\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React,{Component} from \"react\"\nimport Detail from \"./DishDetail\"\nimport Menu from \"./Menu\"\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\nimport Contact from \"./components/Contact\"\nimport Home from './components/Home'\nimport { Switch, Route, Redirect ,withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport About from \"./components/About\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { actions } from 'react-redux-form';\nimport { postComment, fetchDishes, fetchComments, fetchPromos,fetchLeaders ,postFeedback} from './Redux/ActionCreators';\n\n\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders()),\n  postFeedback: (\n    firstname,\n    lastname,\n    telnum,\n    email,\n    agree,\n    contactType,\n    message\n  ) =>\n    dispatch(\n      postFeedback(\n        firstname,\n        lastname,\n        telnum,\n        email,\n        agree,\n        contactType,\n        message\n      )\n    )\n});\nclass Main extends Component {\n /*constructor(props) {\n    super(props);\n  \n    }*/\n    componentDidMount() {\n      this.props.fetchDishes();\n      this.props.fetchComments();\n      this.props.fetchPromos();\n      this.props.fetchLeaders();\n    }\n  render(){\n      const HomePage = () => {\n        return(\n          <Home \n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishErrMess={this.props.dishes.errMess}\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n          promoLoading={this.props.promotions.isLoading}\n          promoErrMess={this.props.promotions.errMess}\n          leaders={this.props.leaders.leaders.filter((leaders) => leaders.featured)[0]}\n          leadersLoading={this.props.leaders.isLoading}\n          leadersErrMess={this.props.leaders.errMess}\n      />\n    );\n  }\n\n  const DishWithId = ({match}) => {\n    return(\n      <Detail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n      isLoading={this.props.dishes.isLoading}\n      errMess={this.props.dishes.errMess}\n      comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n      commentsErrMess={this.props.comments.errMess}\n      postComment={this.props.postComment}\n    />\n    \n    );\n  };\n      return (\n        <div>\n          <Header />\n          <div>\n         \n          <TransitionGroup>\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n              <Switch location={this.props.location}>\n                  <Route path='/home' component={HomePage} />\n                  <Route\n                  exact\n                  path=\"/aboutus\"\n                  component={() => (\n                    <About\n                      leaders={this.props.leaders.leaders}\n                      leaderLoading={this.props.leaders.isLoading}\n                      leaderErrMess={this.props.leaders.errMess}\n                    />\n                  )}/>\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                  <Route path='/menu/:dishId' component={DishWithId} />\n                  <Route\n                  exact\n                  path=\"/contactus\"\n                  component={() => (\n                    <Contact\n                      resetFeedbackForm={this.props.resetFeedbackForm}\n                      postFeedback={this.props.postFeedback}\n                    />\n                  )}\n                />\n                  <Redirect to=\"/home\" />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n  }\n\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))","import { DISHES } from '../dishes';\nimport * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = { isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return {...state, errMess: null, comments: action.payload};\n\n    case ActionTypes.COMMENTS_FAILED:\n      return {...state, errMess: action.payload};\n\n    case ActionTypes.ADD_COMMENT:\n        var comment = action.payload;\n        return { ...state, comments: state.comments.concat(comment)};\n\n    default:\n      return state;\n  }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state  = { isLoading: true,\n                                        errMess: null,\n                                        leaders:[]}, action) => {\n    switch (action.type) {  case ActionTypes.ADD_LEADERS:\n        return {\n          ...state,\n          isLoading: false,\n          errMess: null,\n          leaders: action.payload\n        };\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React,{Component} from 'react';\nimport './App.css';\nimport Main from \"./Main\"\nimport {BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './Redux/Configure.';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  \n  render(){\n    return(\n    <Provider store={store}><BrowserRouter><div>\n <Main/>\n </div></BrowserRouter></Provider>\n    )}}\n\nexport default App;\n","\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport {createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './Forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n   \n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.css'\nimport 'bootstrap-social/bootstrap-social.css';\n//import Formapp from \"./Forms\"\n\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}